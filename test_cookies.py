#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã HTTP-Only cookies –≤ API Gateway
"""

import httpx
import asyncio
import json

async def test_cookies():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É cookies –≤ API Gateway"""
    
    base_url = "http://localhost:8002"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É HTTP-Only cookies –≤ API Gateway...")
    
    async with httpx.AsyncClient() as client:
        # –¢–µ—Å—Ç 1: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º sign-up —Å cookies:")
        signup_data = {
            "email": "test_cookies@example.com",
            "password": "testpassword123"
        }
        
        try:
            response = await client.post(f"{base_url}/v1/client/sign-up", json=signup_data)
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 201:
                print("   ‚úÖ Sign-up —É—Å–ø–µ—à–µ–Ω!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies
                cookies = response.cookies
                print(f"   üç™ Access Token Cookie: {'access_token' in cookies}")
                print(f"   üç™ Refresh Token Cookie: {'refresh_token' in cookies}")
                
                if 'access_token' in cookies:
                    print(f"   üìù Access Token: {cookies['access_token'][:20]}...")
                if 'refresh_token' in cookies:
                    print(f"   üìù Refresh Token: {cookies['refresh_token'][:20]}...")
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies –¥–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
                client.cookies = response.cookies
                
            else:
                print(f"   ‚ùå Sign-up –Ω–µ —É–¥–∞–ª—Å—è: {response.text}")
                return
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
            return
        
        # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —Å cookies (–±–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ Authorization)
        print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º /v1/client/me —Å cookies (–±–µ–∑ Authorization header):")
        try:
            response = await client.get(f"{base_url}/v1/client/me")
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—É—á–µ–Ω —Å cookies!")
                user_data = response.json()
                print(f"   üë§ User ID: {user_data.get('user_id')}")
                print(f"   üìß Email: {user_data.get('email')}")
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ —Å cookies
        print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º refresh_token —Å cookies:")
        try:
            response = await client.post(f"{base_url}/v1/client/refresh_token")
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —Å cookies!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ cookies
                cookies = response.cookies
                print(f"   üç™ –ù–æ–≤—ã–π Access Token Cookie: {'access_token' in cookies}")
                print(f"   üç™ –ù–æ–≤—ã–π Refresh Token Cookie: {'refresh_token' in cookies}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º cookies
                client.cookies = response.cookies
                
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 4: –í—ã—Ö–æ–¥ —Å cookies
        print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º logout —Å cookies:")
        try:
            response = await client.post(f"{base_url}/v1/client/logout")
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 204:
                print("   ‚úÖ –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å cookies!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ cookies –æ—á–∏—â–µ–Ω—ã
                cookies = response.cookies
                print(f"   üç™ Access Token Cookie –æ—á–∏—â–µ–Ω: {'access_token' not in cookies}")
                print(f"   üç™ Refresh Token Cookie –æ—á–∏—â–µ–Ω: {'refresh_token' not in cookies}")
                
            else:
                print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–π—Ç–∏: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 5: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞
        print("\n5. –¢–µ—Å—Ç–∏—Ä—É–µ–º /v1/client/me –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞:")
        try:
            response = await client.get(f"{base_url}/v1/client/me")
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 401:
                print("   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω –¥–æ—Å—Ç—É–ø –ø–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞!")
            else:
                print(f"   ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç cookies –∑–∞–≤–µ—Ä—à–µ–Ω!")

async def test_mixed_auth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–º–µ—à–∞–Ω–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (–∑–∞–≥–æ–ª–æ–≤–æ–∫ + cookies)"""
    
    base_url = "http://localhost:8002"
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–º–µ—à–∞–Ω–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é...")
    
    async with httpx.AsyncClient() as client:
        # –°–Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º—Å—è
        signup_data = {
            "email": "test_mixed@example.com",
            "password": "testpassword123"
        }
        
        try:
            response = await client.post(f"{base_url}/v1/client/sign-up", json=signup_data)
            if response.status_code != 201:
                print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Ç–µ—Å—Ç–∞")
                return
            
            # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –æ—Ç–≤–µ—Ç–∞
            token_data = response.json()
            access_token = token_data.get("jwt")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º cookies
            client.cookies = response.cookies
            
            print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")
            
            # –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º Authorization (–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å)
            print("\n   1. –ó–∞–ø—Ä–æ—Å —Å Authorization header:")
            headers = {"Authorization": f"Bearer {access_token}"}
            response = await client.get(f"{base_url}/v1/client/me", headers=headers)
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å Authorization header!")
            else:
                print(f"   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å Authorization header: {response.text}")
            
            # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ —Å cookies (–¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å)
            print("\n   2. –ó–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ —Å cookies:")
            response = await client.get(f"{base_url}/v1/client/me")
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç —Å cookies!")
            else:
                print(f"   ‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å cookies: {response.text}")
            
            # –¢–µ—Å—Ç 3: –ó–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–µ—Ä–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º, –Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ cookies
            print("\n   3. –ó–∞–ø—Ä–æ—Å —Å –Ω–µ–≤–µ—Ä–Ω—ã–º Authorization header, –Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ cookies:")
            headers = {"Authorization": "Bearer invalid_token"}
            response = await client.get(f"{base_url}/v1/client/me", headers=headers)
            print(f"   Status Code: {response.status_code}")
            
            if response.status_code == 200:
                print("   ‚úÖ Cookies –∏–º–µ—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞–¥ –Ω–µ–≤–µ—Ä–Ω—ã–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º!")
            else:
                print(f"   ‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø: {response.text}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ HTTP-Only cookies...")
    asyncio.run(test_cookies())
    asyncio.run(test_mixed_auth())
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
