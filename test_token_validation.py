#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞
"""

import httpx
import asyncio

async def test_token_validation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–æ–∫–µ–Ω–∞"""
    
    base_url = "http://localhost:8002"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é —Ç–æ–∫–µ–Ω–∞...")
    
    # –¢–µ—Å—Ç 1: –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ —á–µ—Ä–µ–∑ /v1/client/validate
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º /v1/client/validate:")
    try:
        async with httpx.AsyncClient() as client:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
            response = await client.get(f"{base_url}/v1/client/validate?token=invalid_token")
            print(f"   –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω: {response.status_code} - {response.text}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
            response = await client.get(f"{base_url}/v1/client/validate")
            print(f"   –ë–µ–∑ —Ç–æ–∫–µ–Ω–∞: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ /v1/client/me (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è)
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º /v1/client/me (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è):")
    try:
        async with httpx.AsyncClient() as client:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
            response = await client.get(f"{base_url}/v1/client/me")
            print(f"   –ë–µ–∑ —Ç–æ–∫–µ–Ω–∞: {response.status_code} - {response.text}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
            headers = {"Authorization": "Bearer invalid_token"}
            response = await client.get(f"{base_url}/v1/client/me", headers=headers)
            print(f"   –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω: {response.status_code} - {response.text}")
            
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    asyncio.run(test_token_validation())
